---
- name: Enable Ambari LDAP
  expect:
    shell: ambari-server setup-ldap
    responses:
        'Primary URL.*: $': '{{ ldap_host_port }}'
        'Secondary URL.*: $': ''
        'Use SSL.*: $': 'false'
        'User object class.*: $': 'person'
        'User name attribute.*: $': 'uid'
        'Group object class.*: $': 'posixGroup'
        'Group name attribute.*: $': 'cn'
        'Group member attribute.*: $': 'memberUid'
        'Distinguished name attribute.*: $': 'dn'
        'Base DN.*: $': '{{ ambari_ldap_basedn }}'
        'Referral method.*: $': 'ignore'
        'Bind anonymously.*: $': '{{ ldap_bind_anonymously }}'
        'Manager DN.*: $': '{{ ambari_ldap_manager }}'
        'Enter Manager Password.*: $': '{{ ambari_ldap_password }}'
        'Re-enter password: $': '{{ ambari_ldap_password }}'
        'Save settings.*\? $': 'y'
    timeout: 30
    echo: yes

- name:  restart ambari_server
  service: name=ambari-server state=restarted

- name: Waiting for ambari-server to start listening on secure port
  wait_for:
    host: '{{ ansible_nodename }}'
    port: '{{ ambari_secure_port }}'

- name: Install open ldap client
  package: name=openldap-clients state=installed

#- name: set ldap admin password
#  shell: ldappasswd -x -h {{ ldap_host_port }} -D {{ olcRootDN }} -w openldap -s {{ ambari_ldap_password }} {{ ambari_ldap_manager }}

#- name: SYNC Ambari LDAP
#  expect:
#    shell:  ambari-server sync-ldap --all
#    responses:
#      'Enter Ambari Admin login: $': '{{ ambari_username }}'
#      'Enter Ambari Admin password: $': '{{ ambari_password }}'
